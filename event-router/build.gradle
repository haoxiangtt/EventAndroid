apply plugin: 'com.android.library'
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
//        debug {
//            debuggable true
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
dependencies {
    //    implementation fileTree(dir: 'libs', include: ['*.jar'])
    provided 'com.android.support:support-v4:25+'
        provided project(':event')
    //    compile project(':router-annotation')
    compile files('libs/router-annotation.jar')
    //    annotationProcessor project(':router-compiler')
//    compile files('libs/event-android-release-v1.0.4.jar')
}


def BASENAME = "event-router";
def sdkDestinationPath = "build/outputs/jar/";
android.libraryVariants.all { variant ->
    def finalName = "${BASENAME}-${variant.name}-v${variant.mergedFlavor.versionName}"
    def deleteBuild = tasks.create(name : "delete${variant.name}Jar",
            type : Delete) {
        delete "${sdkDestinationPath}${finalName}.jar"
    }
    tasks.create(name : "makeJar${variant.name.capitalize()}",
            dependsOn : [deleteBuild, variant.assemble],
            type : Jar) {
//        def zfile = file("build/intermediates/bundles/${variant.name}/classes.jar")
//        from zipTree(zfile)
        from "build/intermediates/classes/${variant.name}"
        baseName finalName
        destinationDir file(sdkDestinationPath)
        exclude "android/support/**/*.class"
        exclude "**/R.class"
        exclude "**/R\$*.class"
        include "event/**/*.class"
    }
}

apply from: 'upload.gradle'